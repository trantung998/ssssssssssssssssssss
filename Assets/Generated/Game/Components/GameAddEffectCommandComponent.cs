//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AddEffectCommandComponent addEffectCommand { get { return (AddEffectCommandComponent)GetComponent(GameComponentsLookup.AddEffectCommand); } }
    public bool hasAddEffectCommand { get { return HasComponent(GameComponentsLookup.AddEffectCommand); } }

    public void AddAddEffectCommand(int newTargetId, Combat.BaseEffectData newValue) {
        var index = GameComponentsLookup.AddEffectCommand;
        var component = (AddEffectCommandComponent)CreateComponent(index, typeof(AddEffectCommandComponent));
        component.targetId = newTargetId;
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAddEffectCommand(int newTargetId, Combat.BaseEffectData newValue) {
        var index = GameComponentsLookup.AddEffectCommand;
        var component = (AddEffectCommandComponent)CreateComponent(index, typeof(AddEffectCommandComponent));
        component.targetId = newTargetId;
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAddEffectCommand() {
        RemoveComponent(GameComponentsLookup.AddEffectCommand);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAddEffectCommand;

    public static Entitas.IMatcher<GameEntity> AddEffectCommand {
        get {
            if (_matcherAddEffectCommand == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AddEffectCommand);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAddEffectCommand = matcher;
            }

            return _matcherAddEffectCommand;
        }
    }
}
