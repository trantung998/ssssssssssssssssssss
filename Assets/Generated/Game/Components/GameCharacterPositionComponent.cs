//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Character.PositionComponent characterPosition { get { return (Character.PositionComponent)GetComponent(GameComponentsLookup.CharacterPosition); } }
    public bool hasCharacterPosition { get { return HasComponent(GameComponentsLookup.CharacterPosition); } }

    public void AddCharacterPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CharacterPosition;
        var component = (Character.PositionComponent)CreateComponent(index, typeof(Character.PositionComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCharacterPosition(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.CharacterPosition;
        var component = (Character.PositionComponent)CreateComponent(index, typeof(Character.PositionComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterPosition() {
        RemoveComponent(GameComponentsLookup.CharacterPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterPosition;

    public static Entitas.IMatcher<GameEntity> CharacterPosition {
        get {
            if (_matcherCharacterPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterPosition = matcher;
            }

            return _matcherCharacterPosition;
        }
    }
}
