//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterCollisionComponent characterCollision { get { return (CharacterCollisionComponent)GetComponent(GameComponentsLookup.CharacterCollision); } }
    public bool hasCharacterCollision { get { return HasComponent(GameComponentsLookup.CharacterCollision); } }

    public void AddCharacterCollision(System.Collections.Generic.List<CollisionData> newCollisionDatas) {
        var index = GameComponentsLookup.CharacterCollision;
        var component = (CharacterCollisionComponent)CreateComponent(index, typeof(CharacterCollisionComponent));
        component.CollisionDatas = newCollisionDatas;
        AddComponent(index, component);
    }

    public void ReplaceCharacterCollision(System.Collections.Generic.List<CollisionData> newCollisionDatas) {
        var index = GameComponentsLookup.CharacterCollision;
        var component = (CharacterCollisionComponent)CreateComponent(index, typeof(CharacterCollisionComponent));
        component.CollisionDatas = newCollisionDatas;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterCollision() {
        RemoveComponent(GameComponentsLookup.CharacterCollision);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterCollision;

    public static Entitas.IMatcher<GameEntity> CharacterCollision {
        get {
            if (_matcherCharacterCollision == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterCollision);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterCollision = matcher;
            }

            return _matcherCharacterCollision;
        }
    }
}
