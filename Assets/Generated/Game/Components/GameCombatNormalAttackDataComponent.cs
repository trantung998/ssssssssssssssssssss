//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Combat.NormalAttackDataComponent combatNormalAttackData { get { return (Combat.NormalAttackDataComponent)GetComponent(GameComponentsLookup.CombatNormalAttackData); } }
    public bool hasCombatNormalAttackData { get { return HasComponent(GameComponentsLookup.CombatNormalAttackData); } }

    public void AddCombatNormalAttackData(Combat.NormalAttackData newValue) {
        var index = GameComponentsLookup.CombatNormalAttackData;
        var component = (Combat.NormalAttackDataComponent)CreateComponent(index, typeof(Combat.NormalAttackDataComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCombatNormalAttackData(Combat.NormalAttackData newValue) {
        var index = GameComponentsLookup.CombatNormalAttackData;
        var component = (Combat.NormalAttackDataComponent)CreateComponent(index, typeof(Combat.NormalAttackDataComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCombatNormalAttackData() {
        RemoveComponent(GameComponentsLookup.CombatNormalAttackData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCombatNormalAttackData;

    public static Entitas.IMatcher<GameEntity> CombatNormalAttackData {
        get {
            if (_matcherCombatNormalAttackData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CombatNormalAttackData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCombatNormalAttackData = matcher;
            }

            return _matcherCombatNormalAttackData;
        }
    }
}
