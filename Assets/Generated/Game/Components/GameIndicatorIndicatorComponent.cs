//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Indicator.IndicatorComponent indicatorIndicator { get { return (Indicator.IndicatorComponent)GetComponent(GameComponentsLookup.IndicatorIndicator); } }
    public bool hasIndicatorIndicator { get { return HasComponent(GameComponentsLookup.IndicatorIndicator); } }

    public void AddIndicatorIndicator(Indicator.BaseIndicatorData newValue) {
        var index = GameComponentsLookup.IndicatorIndicator;
        var component = (Indicator.IndicatorComponent)CreateComponent(index, typeof(Indicator.IndicatorComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceIndicatorIndicator(Indicator.BaseIndicatorData newValue) {
        var index = GameComponentsLookup.IndicatorIndicator;
        var component = (Indicator.IndicatorComponent)CreateComponent(index, typeof(Indicator.IndicatorComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIndicatorIndicator() {
        RemoveComponent(GameComponentsLookup.IndicatorIndicator);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIndicatorIndicator;

    public static Entitas.IMatcher<GameEntity> IndicatorIndicator {
        get {
            if (_matcherIndicatorIndicator == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IndicatorIndicator);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIndicatorIndicator = matcher;
            }

            return _matcherIndicatorIndicator;
        }
    }
}
