//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EffectDataChangedListenerComponent effectDataChangedListener { get { return (EffectDataChangedListenerComponent)GetComponent(GameComponentsLookup.EffectDataChangedListener); } }
    public bool hasEffectDataChangedListener { get { return HasComponent(GameComponentsLookup.EffectDataChangedListener); } }

    public void AddEffectDataChangedListener(System.Collections.Generic.List<IEffectDataChangedListener> newValue) {
        var index = GameComponentsLookup.EffectDataChangedListener;
        var component = (EffectDataChangedListenerComponent)CreateComponent(index, typeof(EffectDataChangedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEffectDataChangedListener(System.Collections.Generic.List<IEffectDataChangedListener> newValue) {
        var index = GameComponentsLookup.EffectDataChangedListener;
        var component = (EffectDataChangedListenerComponent)CreateComponent(index, typeof(EffectDataChangedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEffectDataChangedListener() {
        RemoveComponent(GameComponentsLookup.EffectDataChangedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEffectDataChangedListener;

    public static Entitas.IMatcher<GameEntity> EffectDataChangedListener {
        get {
            if (_matcherEffectDataChangedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EffectDataChangedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEffectDataChangedListener = matcher;
            }

            return _matcherEffectDataChangedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddEffectDataChangedListener(IEffectDataChangedListener value) {
        var listeners = hasEffectDataChangedListener
            ? effectDataChangedListener.value
            : new System.Collections.Generic.List<IEffectDataChangedListener>();
        listeners.Add(value);
        ReplaceEffectDataChangedListener(listeners);
    }

    public void RemoveEffectDataChangedListener(IEffectDataChangedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = effectDataChangedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveEffectDataChangedListener();
        } else {
            ReplaceEffectDataChangedListener(listeners);
        }
    }
}
