//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceContext {

    public ServiceEntity bTServiceEntity { get { return GetGroup(ServiceMatcher.BTService).GetSingleEntity(); } }
    public BTServiceComponent bTService { get { return bTServiceEntity.bTService; } }
    public bool hasBTService { get { return bTServiceEntity != null; } }

    public ServiceEntity SetBTService(IBTService newInstance) {
        if (hasBTService) {
            throw new Entitas.EntitasException("Could not set BTService!\n" + this + " already has an entity with BTServiceComponent!",
                "You should check if the context already has a bTServiceEntity before setting it or use context.ReplaceBTService().");
        }
        var entity = CreateEntity();
        entity.AddBTService(newInstance);
        return entity;
    }

    public void ReplaceBTService(IBTService newInstance) {
        var entity = bTServiceEntity;
        if (entity == null) {
            entity = SetBTService(newInstance);
        } else {
            entity.ReplaceBTService(newInstance);
        }
    }

    public void RemoveBTService() {
        bTServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceEntity {

    public BTServiceComponent bTService { get { return (BTServiceComponent)GetComponent(ServiceComponentsLookup.BTService); } }
    public bool hasBTService { get { return HasComponent(ServiceComponentsLookup.BTService); } }

    public void AddBTService(IBTService newInstance) {
        var index = ServiceComponentsLookup.BTService;
        var component = (BTServiceComponent)CreateComponent(index, typeof(BTServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceBTService(IBTService newInstance) {
        var index = ServiceComponentsLookup.BTService;
        var component = (BTServiceComponent)CreateComponent(index, typeof(BTServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveBTService() {
        RemoveComponent(ServiceComponentsLookup.BTService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServiceMatcher {

    static Entitas.IMatcher<ServiceEntity> _matcherBTService;

    public static Entitas.IMatcher<ServiceEntity> BTService {
        get {
            if (_matcherBTService == null) {
                var matcher = (Entitas.Matcher<ServiceEntity>)Entitas.Matcher<ServiceEntity>.AllOf(ServiceComponentsLookup.BTService);
                matcher.componentNames = ServiceComponentsLookup.componentNames;
                _matcherBTService = matcher;
            }

            return _matcherBTService;
        }
    }
}
