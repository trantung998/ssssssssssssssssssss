//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceContext {

    public ServiceEntity gameplayServicesInputInputServiceEntity { get { return GetGroup(ServiceMatcher.GameplayServicesInputInputService).GetSingleEntity(); } }
    public GameplayServices.Input.InputServiceComponent gameplayServicesInputInputService { get { return gameplayServicesInputInputServiceEntity.gameplayServicesInputInputService; } }
    public bool hasGameplayServicesInputInputService { get { return gameplayServicesInputInputServiceEntity != null; } }

    public ServiceEntity SetGameplayServicesInputInputService(GameplayServices.Input.IInputService newInstance) {
        if (hasGameplayServicesInputInputService) {
            throw new Entitas.EntitasException("Could not set GameplayServicesInputInputService!\n" + this + " already has an entity with GameplayServices.Input.InputServiceComponent!",
                "You should check if the context already has a gameplayServicesInputInputServiceEntity before setting it or use context.ReplaceGameplayServicesInputInputService().");
        }
        var entity = CreateEntity();
        entity.AddGameplayServicesInputInputService(newInstance);
        return entity;
    }

    public void ReplaceGameplayServicesInputInputService(GameplayServices.Input.IInputService newInstance) {
        var entity = gameplayServicesInputInputServiceEntity;
        if (entity == null) {
            entity = SetGameplayServicesInputInputService(newInstance);
        } else {
            entity.ReplaceGameplayServicesInputInputService(newInstance);
        }
    }

    public void RemoveGameplayServicesInputInputService() {
        gameplayServicesInputInputServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceEntity {

    public GameplayServices.Input.InputServiceComponent gameplayServicesInputInputService { get { return (GameplayServices.Input.InputServiceComponent)GetComponent(ServiceComponentsLookup.GameplayServicesInputInputService); } }
    public bool hasGameplayServicesInputInputService { get { return HasComponent(ServiceComponentsLookup.GameplayServicesInputInputService); } }

    public void AddGameplayServicesInputInputService(GameplayServices.Input.IInputService newInstance) {
        var index = ServiceComponentsLookup.GameplayServicesInputInputService;
        var component = (GameplayServices.Input.InputServiceComponent)CreateComponent(index, typeof(GameplayServices.Input.InputServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceGameplayServicesInputInputService(GameplayServices.Input.IInputService newInstance) {
        var index = ServiceComponentsLookup.GameplayServicesInputInputService;
        var component = (GameplayServices.Input.InputServiceComponent)CreateComponent(index, typeof(GameplayServices.Input.InputServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveGameplayServicesInputInputService() {
        RemoveComponent(ServiceComponentsLookup.GameplayServicesInputInputService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServiceMatcher {

    static Entitas.IMatcher<ServiceEntity> _matcherGameplayServicesInputInputService;

    public static Entitas.IMatcher<ServiceEntity> GameplayServicesInputInputService {
        get {
            if (_matcherGameplayServicesInputInputService == null) {
                var matcher = (Entitas.Matcher<ServiceEntity>)Entitas.Matcher<ServiceEntity>.AllOf(ServiceComponentsLookup.GameplayServicesInputInputService);
                matcher.componentNames = ServiceComponentsLookup.componentNames;
                _matcherGameplayServicesInputInputService = matcher;
            }

            return _matcherGameplayServicesInputInputService;
        }
    }
}
