//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceContext {

    public ServiceEntity randomServiceEntity { get { return GetGroup(ServiceMatcher.RandomService).GetSingleEntity(); } }
    public RandomServiceComponent randomService { get { return randomServiceEntity.randomService; } }
    public bool hasRandomService { get { return randomServiceEntity != null; } }

    public ServiceEntity SetRandomService(IRandomService newInstance) {
        if (hasRandomService) {
            throw new Entitas.EntitasException("Could not set RandomService!\n" + this + " already has an entity with RandomServiceComponent!",
                "You should check if the context already has a randomServiceEntity before setting it or use context.ReplaceRandomService().");
        }
        var entity = CreateEntity();
        entity.AddRandomService(newInstance);
        return entity;
    }

    public void ReplaceRandomService(IRandomService newInstance) {
        var entity = randomServiceEntity;
        if (entity == null) {
            entity = SetRandomService(newInstance);
        } else {
            entity.ReplaceRandomService(newInstance);
        }
    }

    public void RemoveRandomService() {
        randomServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServiceEntity {

    public RandomServiceComponent randomService { get { return (RandomServiceComponent)GetComponent(ServiceComponentsLookup.RandomService); } }
    public bool hasRandomService { get { return HasComponent(ServiceComponentsLookup.RandomService); } }

    public void AddRandomService(IRandomService newInstance) {
        var index = ServiceComponentsLookup.RandomService;
        var component = (RandomServiceComponent)CreateComponent(index, typeof(RandomServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceRandomService(IRandomService newInstance) {
        var index = ServiceComponentsLookup.RandomService;
        var component = (RandomServiceComponent)CreateComponent(index, typeof(RandomServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveRandomService() {
        RemoveComponent(ServiceComponentsLookup.RandomService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServiceMatcher {

    static Entitas.IMatcher<ServiceEntity> _matcherRandomService;

    public static Entitas.IMatcher<ServiceEntity> RandomService {
        get {
            if (_matcherRandomService == null) {
                var matcher = (Entitas.Matcher<ServiceEntity>)Entitas.Matcher<ServiceEntity>.AllOf(ServiceComponentsLookup.RandomService);
                matcher.componentNames = ServiceComponentsLookup.componentNames;
                _matcherRandomService = matcher;
            }

            return _matcherRandomService;
        }
    }
}
